{
  "": {
    "07E320C044AB2985DAD5A481E16EB3D0": "A configurable Bouncy Slurpshroom.",
    "E6BA251D4776B128384713B65FF03691": "A configurable bouncy Hop Flower.",
    "BAA8AF6B45FC3A32E881D88E20ACE379": "A configurable classic-style bouncer.",
    "12B0CB4145A1C71A065B02B9C97D802A": "A configurable stack of bouncy tires.",
    "FAB7AA244499073864A5A29B3E98590A": "A customizable Classic Bouncer",
    "F4976B4F45EA4247FED9A9AACC24FA8A": "A customizable Mushroom Bouncer that can heal players over time.",
    "287C13994B486AC40C92D6939092D245": "A gallery of configurable bouncers.",
    "DCBB3CC74FB69FC26E6EF783F079A977": "A gallery of configurable bouncers.",
    "2BD2A0C7428A4AE7766865BD8A23E0B2": "A stack of tires that players can bounce on.",
    "3997374D4F34FF6B8D921D8489422DFA": "A stack of tires that players can bounce on.",
    "772CAE7E41CFF28EA5A766B68BCDF818": "A stack of tires that players can bounce on.",
    "BB90FF144C14BF66AFFB34A60DAAB942": "A stack of tires that players can bounce on.",
    "DEFEFCD647919D2925CD86A64409224C": "AI",
    "8E6EC335406ECE16EF8FC9A76752F5F1": "All Bounced",
    "2E59854745C28A4CA84583AC825C7267": "Bouncer Gallery",
    "5B123E7E49490E1DC3FA478181528EA7": "Bouncer Gallery",
    "B6D0CC644E6BE4AE630B269CB657B7AA": "Bouncer Gallery",
    "BEE493E84F073F914C2BF880D2833142": "Bouncer Gallery",
    "8CB4A4F0415A70E7AD23688CD3077588": "Bouncer Orientation",
    "4BD2A5F04507EEC44FC44F916BD4794C": "Classic Bouncer",
    "7EE43A894AA29A3626B3D6B28C83B3D6": "Classic Bouncer",
    "3B7A3613474AE494CF8F358E479E8935": "Disable the device to prevent bouncing when receiving from the specified channel.",
    "37F42F8D450E68A90E58BBAAAB28E01F": "Disabled",
    "D06F1A494D3D65665230F38634074051": "Disabled",
    "F6EAB8944FB48FB8DC15B29EB8E5E36E": "Enable the device to allow bouncing when receiving from the specified channel.",
    "17D95CD44830B5B405AA87A9947D7686": "Enabled",
    "50164E6A42AFBB6AFD99C8AB7E710FFE": "Enabled",
    "3EBF954C4CDDB56A1176F2943A97043D": "False",
    "37FD1BC243F266E696A865B2FC15C7E1": "Hop Flower",
    "C908681D40F17EB0B94FB49E0D4F54AD": "Instant Heal",
    "4DD6CA3946F84F88CDA4B79DB6096779": "Invalid",
    "7C601017472E7753A5AA7FBD39101132": "Large Tire Bouncer",
    "65C4F2FE495B469C87EAE1AE5048B555": "Mushroom Bouncer",
    "BF85824B4AFF65789095D0826569093E": "Mushroom Bouncer",
    "0AA652834E0D53543DFAF9B2A28F64CC": "No",
    "8D02C92549C159C249A9B195CC17D7FA": "No",
    "970076414CC27668A3093EAF1B81B779": "No",
    "9BDE2A2B41345EE68FC1349FFA1ADFCC": "No",
    "A60E5E484C38495376B02DBB75A6BC18": "No",
    "C3665CDC4A94DB1A731B33A6251D733C": "No",
    "280DE6B5411D1B8F0D83778F2ED4B23F": "No Heal",
    "955899974B9961F2C19CAFB291300A63": "On Heal Effect Starts Transmit On",
    "EEC07E6B425C6612FBD5E79F0C289B76": "On Heal Effect Stops Transmit On",
    "8FB823F74860EC2F3AA041B4A8C55492": "Periodic Heal",
    "EB7FF5EA4ECCBF3D58D290A5EEE05304": "PhysicsObject",
    "70C6315E49C7995D5C12B285F24BFCE2": "Player",
    "58E91A994E94E5D5B91F6EA0C698BC9E": "Players Only",
    "2688337C47831B70065192B523BC7949": "Projectile",
    "92A7034348CC76789BF5A398A3BB5A77": "Short Tire Bouncer",
    "6BA1DE804931C3EF760FDDA463D8118A": "Stacked Tire Bouncer Large",
    "4DCF25C0474E5A9C627EC8A2EE438704": "Stacked Tire Bouncer Short",
    "FFD1088F40EA0ABEE54B6A86498ECF14": "Stacked Tire Bouncer Tall",
    "B8C5853147DF67747F7EB291F8F21F78": "Stacked Tire Bouncer Toppled",
    "65DDD1F34475BD804DB26F9919F88B96": "Tall Tire Bouncer",
    "FD05EF4949C5C715833AEE8C5F32CC4A": "Tire Bouncer",
    "68E78C214510DED5C23F17988B4E0FC2": "Toppled Tire Bouncer",
    "B404BDED48685A9211DC77AC0528C467": "Transmit a signal when a player is bounced by this device.",
    "847FB76447B42395A3B760A212F0437F": "Transmit a signal when the heal effect from this device ends for a player.",
    "DE16A16849D60155C14DF688D4E1485E": "Transmit a signal when the player gets a heal effect from this device.",
    "A7E5A7D0413DF2AA08EE9BA419E7FEE0": "True",
    "4407CEA6417C4CD903487993DDBF94DF": "Vehicle",
    "8E0B0ACC4F6606E08BDD359EB58BF5C0": "Vertical",
    "47FBA20D4C627ED9611A45A0607FDF87": "When Bounced On Transmit On",
    "13CEB1A7411CF951454683AE626BDF00": "Yes",
    "1A12B9A24E8D0B070BF272A7FECB097D": "Yes",
    "3DB1CA8E44CBF36ADDE73688EA16A1C2": "Yes",
    "588541E64262DB79DFFE64A9169DC771": "Yes",
    "958C2C3C45A0A9B055D22A844876FB2F": "Yes",
    "CBE2E7E74D927C945E079FB700596872": "Yes",
    "938769FD4DE775A14B9CF28AB74FDCD2": "{0} {1}|plural(one=Second, other=Seconds)",
    "E92AEFC04159331BC8067A87682137BF": "{0} {1}|plural(one=Second, other=Seconds)",
    "83B3633143622D2B22262690BE5FA7F9": "{0} {1}|plural(one=meter, other=meters)/second",
    "AEA7070F45C91A1C34EF2DB40F729F28": "{0} {1}|plural(one=meter, other=meters)/second",
    "560BFACE4BFA12F9725DDCBDE210A4EA": "{0} {1}|plural(one=second, other=seconds)",
    "49FEB6444C6EB6A879BFB0ACB1C0824A": "{0}%",
    "6E50F7834056E5CBC1CCADBA0E5BF1D7": "{0}%"
  },
  "Fort.Actor.Building.Defaults": {
    "OptionDefinitionContainer.LabelOverride": "Label"
  },
  "UserOptionDefinition": {
    "BP_Device_Bouncer_C.ActivatingClass.DisplayName": "Activating Class",
    "BP_Device_Bouncer_TireParent_C.ActivatingClass.DisplayName": "Activating Class",
    "BP_Device_ClassicBouncer_C.ActivatingClass.DisplayName": "Activating Class",
    "BP_Device_HopFlower_C.ActivatingClass.DisplayName": "Activating Class",
    "BP_Device_MushroomBouncer_C.ActivatingClass.DisplayName": "Activating Class",
    "BP_Device_Bouncer_C.ActivatingTeam.DisplayName": "Activating Team",
    "BP_Device_Bouncer_TireParent_C.ActivatingTeam.DisplayName": "Activating Team",
    "BP_Device_ClassicBouncer_C.ActivatingTeam.DisplayName": "Activating Team",
    "BP_Device_HopFlower_C.ActivatingTeam.DisplayName": "Activating Team",
    "BP_Device_MushroomBouncer_C.ActivatingTeam.DisplayName": "Activating Team",
    "EBouncedTriggerSource.All Bounced.DisplayName": "All Bounced",
    "CA9F241E4F20BEDF76B818B9C4926BB9": "Allow Creatures",
    "BP_Device_Bouncer_C.AllowDBNO.DisplayName": "Allow DBNO",
    "BP_Device_Bouncer_TireParent_C.AllowDBNO.DisplayName": "Allow DBNO",
    "BP_Device_ClassicBouncer_C.AllowDBNO.DisplayName": "Allow DBNO",
    "BP_Device_HopFlower_C.AllowDBNO.DisplayName": "Allow DBNO",
    "BP_Device_MushroomBouncer_C.AllowDBNO.DisplayName": "Allow DBNO",
    "BP_Device_Bouncer_C.AllowGuards.DisplayName": "Allow Guards",
    "BP_Device_Bouncer_TireParent_C.AllowGuards.DisplayName": "Allow Guards",
    "BP_Device_ClassicBouncer_C.AllowGuards.DisplayName": "Allow Guards",
    "BP_Device_HopFlower_C.AllowGuards.DisplayName": "Allow Guards",
    "BP_Device_MushroomBouncer_C.AllowGuards.DisplayName": "Allow Guards",
    "BP_Device_Bouncer_C.AllowObjects.DisplayName": "Allow Objects",
    "BP_Device_Bouncer_TireParent_C.AllowObjects.DisplayName": "Allow Objects",
    "BP_Device_ClassicBouncer_C.AllowObjects.DisplayName": "Allow Objects",
    "BP_Device_HopFlower_C.AllowObjects.DisplayName": "Allow Objects",
    "BP_Device_MushroomBouncer_C.AllowObjects.DisplayName": "Allow Objects",
    "BP_Device_Bouncer_C.AllowPlayers.DisplayName": "Allow Players",
    "BP_Device_Bouncer_TireParent_C.AllowPlayers.DisplayName": "Allow Players",
    "BP_Device_ClassicBouncer_C.AllowPlayers.DisplayName": "Allow Players",
    "BP_Device_HopFlower_C.AllowPlayers.DisplayName": "Allow Players",
    "BP_Device_MushroomBouncer_C.AllowPlayers.DisplayName": "Allow Players",
    "BP_Device_Bouncer_C.AllowVehicles.DisplayName": "Allow Vehicles",
    "BP_Device_Bouncer_TireParent_C.AllowVehicles.DisplayName": "Allow Vehicles",
    "BP_Device_ClassicBouncer_C.AllowVehicles.DisplayName": "Allow Vehicles",
    "BP_Device_HopFlower_C.AllowVehicles.DisplayName": "Allow Vehicles",
    "BP_Device_MushroomBouncer_C.AllowVehicles.DisplayName": "Allow Vehicles",
    "BP_Device_Bouncer_C.AllowWildlife.DisplayName": "Allow Wildlife",
    "BP_Device_Bouncer_TireParent_C.AllowWildlife.DisplayName": "Allow Wildlife",
    "BP_Device_ClassicBouncer_C.AllowWildlife.DisplayName": "Allow Wildlife",
    "BP_Device_HopFlower_C.AllowWildlife.DisplayName": "Allow Wildlife",
    "BP_Device_MushroomBouncer_C.AllowWildlife.DisplayName": "Allow Wildlife",
    "ECreativeClassType.Any.DisplayName": "Any",
    "ECreativeTeamType.Any.DisplayName": "Any",
    "BP_Device_Bouncer_C.bApplyLowGravity.DisplayName": "Apply Low Gravity",
    "BP_Device_Bouncer_TireParent_C.bApplyLowGravity.DisplayName": "Apply Low Gravity",
    "BP_Device_ClassicBouncer_C.bApplyLowGravity.DisplayName": "Apply Low Gravity",
    "BP_Device_HopFlower_C.bApplyLowGravity.DisplayName": "Apply Low Gravity",
    "BP_Device_MushroomBouncer_C.bApplyLowGravity.DisplayName": "Apply Low Gravity",
    "BP_Device_Bouncer_C.BounceDirection.DisplayName": "Bounce Direction",
    "BP_Device_Bouncer_TireParent_C.BounceDirection.DisplayName": "Bounce Direction",
    "BP_Device_ClassicBouncer_C.BounceDirection.DisplayName": "Bounce Direction",
    "BP_Device_HopFlower_C.BounceDirection.DisplayName": "Bounce Direction",
    "BP_Device_MushroomBouncer_C.BounceDirection.DisplayName": "Bounce Direction",
    "BP_Device_Bouncer_C.BounceVelocity.DisplayName": "Bounce Velocity",
    "BP_Device_Bouncer_TireParent_C.BounceVelocity.DisplayName": "Bounce Velocity",
    "BP_Device_ClassicBouncer_C.BounceVelocity.DisplayName": "Bounce Velocity",
    "BP_Device_HopFlower_C.BounceVelocity.DisplayName": "Bounce Velocity",
    "BP_Device_MushroomBouncer_C.BounceVelocity.DisplayName": "Bounce Velocity",
    "4B6B6A6D489EFCD3333B8995E183C705": "Bounced FX",
    "EBounceDirection.Bouncer Orientation.DisplayName": "Bouncer Orientation",
    "ClassSlotMetaData.DisplayPattern": "Class {0}",
    "BP_Device_Bouncer_C.HealCooldown.Description": "Determines how long the device cools down after applying a heal effect.",
    "BP_Device_Bouncer_TireParent_C.HealCooldown.Description": "Determines how long the device cools down after applying a heal effect.",
    "BP_Device_ClassicBouncer_C.HealCooldown.Description": "Determines how long the device cools down after applying a heal effect.",
    "BP_Device_HopFlower_C.HealCooldown.Description": "Determines how long the device cools down after applying a heal effect.",
    "BP_Device_MushroomBouncer_C.HealCooldown.Description": "Determines how long the device cools down after applying a heal effect.",
    "BP_Device_Bouncer_C.HealDuration.Description": "Determines how long the heal effect will be applied to the player, in seconds.",
    "BP_Device_Bouncer_TireParent_C.HealDuration.Description": "Determines how long the heal effect will be applied to the player, in seconds.",
    "BP_Device_ClassicBouncer_C.HealDuration.Description": "Determines how long the heal effect will be applied to the player, in seconds.",
    "BP_Device_HopFlower_C.HealDuration.Description": "Determines how long the heal effect will be applied to the player, in seconds.",
    "BP_Device_MushroomBouncer_C.HealDuration.Description": "Determines how long the heal effect will be applied to the player, in seconds.",
    "BP_Device_Bouncer_C.HealIntervals.Description": "Determines how often during the Heal Duration that the Heal Amount is applied to the player, in seconds. If longer than Heal Duration, no heal will be applied.",
    "BP_Device_Bouncer_TireParent_C.HealIntervals.Description": "Determines how often during the Heal Duration that the Heal Amount is applied to the player, in seconds. If longer than Heal Duration, no heal will be applied.",
    "BP_Device_ClassicBouncer_C.HealIntervals.Description": "Determines how often during the Heal Duration that the Heal Amount is applied to the player, in seconds. If longer than Heal Duration, no heal will be applied.",
    "BP_Device_HopFlower_C.HealIntervals.Description": "Determines how often during the Heal Duration that the Heal Amount is applied to the player, in seconds. If longer than Heal Duration, no heal will be applied.",
    "BP_Device_MushroomBouncer_C.HealIntervals.Description": "Determines how often during the Heal Duration that the Heal Amount is applied to the player, in seconds. If longer than Heal Duration, no heal will be applied.",
    "BP_Device_Bouncer_C.BounceDirection.Description": "Determines the direction in which the bouncer launches players. If VERTICAL, always launch the player upward. If BOUNCER ORIENTATION, launch direction will depend on the device's rotation.",
    "BP_Device_Bouncer_TireParent_C.BounceDirection.Description": "Determines the direction in which the bouncer launches players. If VERTICAL, always launch the player upward. If BOUNCER ORIENTATION, launch direction will depend on the device's rotation.",
    "BP_Device_ClassicBouncer_C.BounceDirection.Description": "Determines the direction in which the bouncer launches players. If VERTICAL, always launch the player upward. If BOUNCER ORIENTATION, launch direction will depend on the device's rotation.",
    "BP_Device_HopFlower_C.BounceDirection.Description": "Determines the direction in which the bouncer launches players. If VERTICAL, always launch the player upward. If BOUNCER ORIENTATION, launch direction will depend on the device's rotation.",
    "BP_Device_MushroomBouncer_C.BounceDirection.Description": "Determines the direction in which the bouncer launches players. If VERTICAL, always launch the player upward. If BOUNCER ORIENTATION, launch direction will depend on the device's rotation.",
    "BP_Device_Bouncer_C.DeviceHealth.Description": "Determines the health of the Bouncer.",
    "BP_Device_Bouncer_TireParent_C.DeviceHealth.Description": "Determines the health of the Bouncer.",
    "BP_Device_ClassicBouncer_C.DeviceHealth.Description": "Determines the health of the Bouncer.",
    "BP_Device_HopFlower_C.DeviceHealth.Description": "Determines the health of the Bouncer.",
    "BP_Device_MushroomBouncer_C.DeviceHealth.Description": "Determines the health of the Bouncer.",
    "BP_Device_Bouncer_C.ForwardVelocity.Description": "Determines the velocity applied in the direction the player faces when the bounce starts. Negative numbers apply velocity in the opposite direction. Depending on this device's size and rotation, it may partially block players from certain angles and result in less Forward Velocity.",
    "BP_Device_Bouncer_TireParent_C.ForwardVelocity.Description": "Determines the velocity applied in the direction the player faces when the bounce starts. Negative numbers apply velocity in the opposite direction. Depending on this device's size and rotation, it may partially block players from certain angles and result in less Forward Velocity.",
    "BP_Device_ClassicBouncer_C.ForwardVelocity.Description": "Determines the velocity applied in the direction the player faces when the bounce starts. Negative numbers apply velocity in the opposite direction. Depending on this device's size and rotation, it may partially block players from certain angles and result in less Forward Velocity.",
    "BP_Device_HopFlower_C.ForwardVelocity.Description": "Determines the velocity applied in the direction the player faces when the bounce starts. Negative numbers apply velocity in the opposite direction. Depending on this device's size and rotation, it may partially block players from certain angles and result in less Forward Velocity.",
    "BP_Device_MushroomBouncer_C.ForwardVelocity.Description": "Determines the velocity applied in the direction the player faces when the bounce starts. Negative numbers apply velocity in the opposite direction. Depending on this device's size and rotation, it may partially block players from certain angles and result in less Forward Velocity.",
    "BP_Device_Bouncer_C.BounceVelocity.Description": "Determines the velocity this device applies to bounced players. As long as Apply Low Gravity is set to OFF, 23 meters/second will launch a player about two floors high, and 30 meters/second will launch a player about four floors high.",
    "BP_Device_Bouncer_TireParent_C.BounceVelocity.Description": "Determines the velocity this device applies to bounced players. As long as Apply Low Gravity is set to OFF, 23 meters/second will launch a player about two floors high, and 30 meters/second will launch a player about four floors high.",
    "BP_Device_ClassicBouncer_C.BounceVelocity.Description": "Determines the velocity this device applies to bounced players. As long as Apply Low Gravity is set to OFF, 23 meters/second will launch a player about two floors high, and 30 meters/second will launch a player about four floors high.",
    "BP_Device_HopFlower_C.BounceVelocity.Description": "Determines the velocity this device applies to bounced players. As long as Apply Low Gravity is set to OFF, 23 meters/second will launch a player about two floors high, and 30 meters/second will launch a player about four floors high.",
    "BP_Device_MushroomBouncer_C.BounceVelocity.Description": "Determines the velocity this device applies to bounced players. As long as Apply Low Gravity is set to OFF, 23 meters/second will launch a player about two floors high, and 30 meters/second will launch a player about four floors high.",
    "BP_Device_Bouncer_C.OnBouncedTrigger.Description": "Determines what causes On Bounced to transmit a signal. PLAYERS ONLY - Transmit when a player bounces. ALL BOUNCED - Transmit when anything bounces.",
    "BP_Device_Bouncer_TireParent_C.OnBouncedTrigger.Description": "Determines what causes On Bounced to transmit a signal. PLAYERS ONLY - Transmit when a player bounces. ALL BOUNCED - Transmit when anything bounces.",
    "BP_Device_ClassicBouncer_C.OnBouncedTrigger.Description": "Determines what causes On Bounced to transmit a signal. PLAYERS ONLY - Transmit when a player bounces. ALL BOUNCED - Transmit when anything bounces.",
    "BP_Device_HopFlower_C.OnBouncedTrigger.Description": "Determines what causes On Bounced to transmit a signal. PLAYERS ONLY - Transmit when a player bounces. ALL BOUNCED - Transmit when anything bounces.",
    "BP_Device_MushroomBouncer_C.OnBouncedTrigger.Description": "Determines what causes On Bounced to transmit a signal. PLAYERS ONLY - Transmit when a player bounces. ALL BOUNCED - Transmit when anything bounces.",
    "BP_Device_HopFlower_C.MaintainedMomentum.Description": "Determines what percent of incoming momentum is maintained, letting players continue moving in the same direction. At 0%, incoming momentum is ignored.",
    "BP_Device_Bouncer_C.AllowCreatures.Description": "Determines whether Creatures can activate the device.",
    "BP_Device_Bouncer_TireParent_C.AllowCreatures.Description": "Determines whether Creatures can activate the device.",
    "BP_Device_ClassicBouncer_C.AllowCreatures.Description": "Determines whether Creatures can activate the device.",
    "BP_Device_HopFlower_C.AllowCreatures.Description": "Determines whether Creatures can activate the device.",
    "BP_Device_MushroomBouncer_C.AllowCreatures.Description": "Determines whether Creatures can activate the device.",
    "BP_Device_Bouncer_C.AllowDBNO.Description": "Determines whether Down But Not Out players can activate the device.",
    "BP_Device_Bouncer_TireParent_C.AllowDBNO.Description": "Determines whether Down But Not Out players can activate the device.",
    "BP_Device_ClassicBouncer_C.AllowDBNO.Description": "Determines whether Down But Not Out players can activate the device.",
    "BP_Device_HopFlower_C.AllowDBNO.Description": "Determines whether Down But Not Out players can activate the device.",
    "BP_Device_MushroomBouncer_C.AllowDBNO.Description": "Determines whether Down But Not Out players can activate the device.",
    "BP_Device_Bouncer_C.AllowGuards.Description": "Determines whether Guards can activate the device. Restricted by Activating Team.",
    "BP_Device_Bouncer_TireParent_C.AllowGuards.Description": "Determines whether Guards can activate the device. Restricted by Activating Team.",
    "BP_Device_ClassicBouncer_C.AllowGuards.Description": "Determines whether Guards can activate the device. Restricted by Activating Team.",
    "BP_Device_HopFlower_C.AllowGuards.Description": "Determines whether Guards can activate the device. Restricted by Activating Team.",
    "BP_Device_MushroomBouncer_C.AllowGuards.Description": "Determines whether Guards can activate the device. Restricted by Activating Team.",
    "BP_Device_Bouncer_C.AllowWildlife.Description": "Determines whether Wildlife can activate the device. While ridden, restricted by Activating Team and Activating Class.",
    "BP_Device_Bouncer_TireParent_C.AllowWildlife.Description": "Determines whether Wildlife can activate the device. While ridden, restricted by Activating Team and Activating Class.",
    "BP_Device_ClassicBouncer_C.AllowWildlife.Description": "Determines whether Wildlife can activate the device. While ridden, restricted by Activating Team and Activating Class.",
    "BP_Device_HopFlower_C.AllowWildlife.Description": "Determines whether Wildlife can activate the device. While ridden, restricted by Activating Team and Activating Class.",
    "BP_Device_MushroomBouncer_C.AllowWildlife.Description": "Determines whether Wildlife can activate the device. While ridden, restricted by Activating Team and Activating Class.",
    "BP_Device_Bouncer_C.HealsPlayer.Description": "Determines whether bouncing applies a heal effect to players and AI who bounce on the device.",
    "BP_Device_Bouncer_TireParent_C.HealsPlayer.Description": "Determines whether bouncing applies a heal effect to players and AI who bounce on the device.",
    "BP_Device_ClassicBouncer_C.HealsPlayer.Description": "Determines whether bouncing applies a heal effect to players and AI who bounce on the device.",
    "BP_Device_HopFlower_C.HealsPlayer.Description": "Determines whether bouncing applies a heal effect to players and AI who bounce on the device.",
    "BP_Device_MushroomBouncer_C.HealsPlayer.Description": "Determines whether bouncing applies a heal effect to players and AI who bounce on the device.",
    "BP_Device_Bouncer_C.bApplyLowGravity.Description": "Determines whether bouncing applies a low gravity effect.",
    "BP_Device_Bouncer_TireParent_C.bApplyLowGravity.Description": "Determines whether bouncing applies a low gravity effect.",
    "BP_Device_ClassicBouncer_C.bApplyLowGravity.Description": "Determines whether bouncing applies a low gravity effect.",
    "BP_Device_HopFlower_C.bApplyLowGravity.Description": "Determines whether bouncing applies a low gravity effect.",
    "BP_Device_MushroomBouncer_C.bApplyLowGravity.Description": "Determines whether bouncing applies a low gravity effect.",
    "BP_Device_Bouncer_C.AllowPlayers.Description": "Determines whether players can activate the device while on foot.",
    "BP_Device_Bouncer_TireParent_C.AllowPlayers.Description": "Determines whether players can activate the device while on foot.",
    "BP_Device_ClassicBouncer_C.AllowPlayers.Description": "Determines whether players can activate the device while on foot.",
    "BP_Device_HopFlower_C.AllowPlayers.Description": "Determines whether players can activate the device while on foot.",
    "BP_Device_MushroomBouncer_C.AllowPlayers.Description": "Determines whether players can activate the device while on foot.",
    "BP_Device_Bouncer_C.bIncreasedAirControl.Description": "Determines whether players have increased movement control during a bounce. Does not apply to players riding or steering something.",
    "BP_Device_Bouncer_TireParent_C.bIncreasedAirControl.Description": "Determines whether players have increased movement control during a bounce. Does not apply to players riding or steering something.",
    "BP_Device_ClassicBouncer_C.bIncreasedAirControl.Description": "Determines whether players have increased movement control during a bounce. Does not apply to players riding or steering something.",
    "BP_Device_HopFlower_C.bIncreasedAirControl.Description": "Determines whether players have increased movement control during a bounce. Does not apply to players riding or steering something.",
    "BP_Device_MushroomBouncer_C.bIncreasedAirControl.Description": "Determines whether players have increased movement control during a bounce. Does not apply to players riding or steering something.",
    "BP_Device_Bouncer_C.IsIndestructible.Description": "Determines whether the device can be damaged.",
    "BP_Device_Bouncer_TireParent_C.IsIndestructible.Description": "Determines whether the device can be damaged.",
    "BP_Device_ClassicBouncer_C.IsIndestructible.Description": "Determines whether the device can be damaged.",
    "BP_Device_HopFlower_C.IsIndestructible.Description": "Determines whether the device can be damaged.",
    "BP_Device_MushroomBouncer_C.IsIndestructible.Description": "Determines whether the device can be damaged.",
    "BP_Device_Bouncer_C.VisibleDuringGame.Description": "Determines whether the device will be visible during the game.",
    "BP_Device_Bouncer_TireParent_C.VisibleDuringGame.Description": "Determines whether the device will be visible during the game.",
    "BP_Device_ClassicBouncer_C.VisibleDuringGame.Description": "Determines whether the device will be visible during the game.",
    "BP_Device_HopFlower_C.VisibleDuringGame.Description": "Determines whether the device will be visible during the game.",
    "BP_Device_MushroomBouncer_C.VisibleDuringGame.Description": "Determines whether the device will be visible during the game.",
    "BP_Device_Bouncer_C.AllowObjects.Description": "Determines whether the device will bounce projectiles and other non-vehicle objects. Projectiles are restricted by Activating Team and Activating Class based on who they come from, but other objects will always bounce.",
    "BP_Device_Bouncer_TireParent_C.AllowObjects.Description": "Determines whether the device will bounce projectiles and other non-vehicle objects. Projectiles are restricted by Activating Team and Activating Class based on who they come from, but other objects will always bounce.",
    "BP_Device_ClassicBouncer_C.AllowObjects.Description": "Determines whether the device will bounce projectiles and other non-vehicle objects. Projectiles are restricted by Activating Team and Activating Class based on who they come from, but other objects will always bounce.",
    "BP_Device_HopFlower_C.AllowObjects.Description": "Determines whether the device will bounce projectiles and other non-vehicle objects. Projectiles are restricted by Activating Team and Activating Class based on who they come from, but other objects will always bounce.",
    "BP_Device_MushroomBouncer_C.AllowObjects.Description": "Determines whether the device will bounce projectiles and other non-vehicle objects. Projectiles are restricted by Activating Team and Activating Class based on who they come from, but other objects will always bounce.",
    "BP_Device_Bouncer_C.BouncedFX.Description": "Determines whether to play VFX and SFX on anything that bounces on the device. This also affects controller rumble.",
    "BP_Device_Bouncer_TireParent_C.BouncedFX.Description": "Determines whether to play VFX and SFX on anything that bounces on the device. This also affects controller rumble.",
    "BP_Device_ClassicBouncer_C.BouncedFX.Description": "Determines whether to play VFX and SFX on anything that bounces on the device. This also affects controller rumble.",
    "BP_Device_HopFlower_C.BouncedFX.Description": "Determines whether to play VFX and SFX on anything that bounces on the device. This also affects controller rumble.",
    "BP_Device_MushroomBouncer_C.BouncedFX.Description": "Determines whether to play VFX and SFX on anything that bounces on the device. This also affects controller rumble.",
    "BP_Device_Bouncer_C.DeviceFX.Description": "Determines whether to play VFX and SFX on the device after a bounce. This affects bounce audio and does not affect non-VFX animations.",
    "BP_Device_Bouncer_TireParent_C.DeviceFX.Description": "Determines whether to play VFX and SFX on the device after a bounce. This affects bounce audio and does not affect non-VFX animations.",
    "BP_Device_ClassicBouncer_C.DeviceFX.Description": "Determines whether to play VFX and SFX on the device after a bounce. This affects bounce audio and does not affect non-VFX animations.",
    "BP_Device_HopFlower_C.DeviceFX.Description": "Determines whether to play VFX and SFX on the device after a bounce. This affects bounce audio and does not affect non-VFX animations.",
    "BP_Device_MushroomBouncer_C.DeviceFX.Description": "Determines whether to play VFX and SFX on the device after a bounce. This affects bounce audio and does not affect non-VFX animations.",
    "BP_Device_Bouncer_C.AllowVehicles.Description": "Determines whether vehicles can activate the device. While driven, restricted by Activating Team and Activating Class.",
    "BP_Device_Bouncer_TireParent_C.AllowVehicles.Description": "Determines whether vehicles can activate the device. While driven, restricted by Activating Team and Activating Class.",
    "BP_Device_ClassicBouncer_C.AllowVehicles.Description": "Determines whether vehicles can activate the device. While driven, restricted by Activating Team and Activating Class.",
    "BP_Device_HopFlower_C.AllowVehicles.Description": "Determines whether vehicles can activate the device. While driven, restricted by Activating Team and Activating Class.",
    "BP_Device_MushroomBouncer_C.AllowVehicles.Description": "Determines whether vehicles can activate the device. While driven, restricted by Activating Team and Activating Class.",
    "BP_Device_Bouncer_C.ActivatingClass.Description": "Determines which Class can activate the device. Can be reversed by Invert Class Selection.",
    "BP_Device_Bouncer_TireParent_C.ActivatingClass.Description": "Determines which Class can activate the device. Can be reversed by Invert Class Selection.",
    "BP_Device_ClassicBouncer_C.ActivatingClass.Description": "Determines which Class can activate the device. Can be reversed by Invert Class Selection.",
    "BP_Device_HopFlower_C.ActivatingClass.Description": "Determines which Class can activate the device. Can be reversed by Invert Class Selection.",
    "BP_Device_MushroomBouncer_C.ActivatingClass.Description": "Determines which Class can activate the device. Can be reversed by Invert Class Selection.",
    "BP_Device_Bouncer_C.ActivatingTeam.Description": "Determines which Team can activate the device. Can be reversed by Invert Team Selection.",
    "BP_Device_Bouncer_TireParent_C.ActivatingTeam.Description": "Determines which Team can activate the device. Can be reversed by Invert Team Selection.",
    "BP_Device_ClassicBouncer_C.ActivatingTeam.Description": "Determines which Team can activate the device. Can be reversed by Invert Team Selection.",
    "BP_Device_HopFlower_C.ActivatingTeam.Description": "Determines which Team can activate the device. Can be reversed by Invert Team Selection.",
    "BP_Device_MushroomBouncer_C.ActivatingTeam.Description": "Determines which Team can activate the device. Can be reversed by Invert Team Selection.",
    "1E4287AA4A03E4CB61EFC490314FA3EB": "Device FX",
    "BP_Device_Bouncer_C.DeviceHealth.DisplayName": "Device Health",
    "BP_Device_Bouncer_TireParent_C.DeviceHealth.DisplayName": "Device Health",
    "BP_Device_ClassicBouncer_C.DeviceHealth.DisplayName": "Device Health",
    "BP_Device_HopFlower_C.DeviceHealth.DisplayName": "Device Health",
    "BP_Device_MushroomBouncer_C.DeviceHealth.DisplayName": "Device Health",
    "BP_Device_Bouncer_C.Disable.DisplayName": "Disable",
    "BP_Device_Bouncer_TireParent_C.Disable.DisplayName": "Disable",
    "BP_Device_ClassicBouncer_C.Disable.DisplayName": "Disable",
    "BP_Device_HopFlower_C.Disable.DisplayName": "Disable",
    "BP_Device_MushroomBouncer_C.Disable.DisplayName": "Disable",
    "BP_Device_Bouncer_C.Disable.Description": "Disables the device to prevent bouncing.",
    "BP_Device_Bouncer_TireParent_C.Disable.Description": "Disables the device to prevent bouncing.",
    "BP_Device_ClassicBouncer_C.Disable.Description": "Disables the device to prevent bouncing.",
    "BP_Device_HopFlower_C.Disable.Description": "Disables the device to prevent bouncing.",
    "BP_Device_MushroomBouncer_C.Disable.Description": "Disables the device to prevent bouncing.",
    "BP_Device_Bouncer_C.Enable.DisplayName": "Enable",
    "BP_Device_Bouncer_TireParent_C.Enable.DisplayName": "Enable",
    "BP_Device_ClassicBouncer_C.Enable.DisplayName": "Enable",
    "BP_Device_HopFlower_C.Enable.DisplayName": "Enable",
    "BP_Device_MushroomBouncer_C.Enable.DisplayName": "Enable",
    "BP_Device_Bouncer_C.Enable.Description": "Enables the device to allow bouncing.",
    "BP_Device_Bouncer_TireParent_C.Enable.Description": "Enables the device to allow bouncing.",
    "BP_Device_ClassicBouncer_C.Enable.Description": "Enables the device to allow bouncing.",
    "BP_Device_HopFlower_C.Enable.Description": "Enables the device to allow bouncing.",
    "BP_Device_MushroomBouncer_C.Enable.Description": "Enables the device to allow bouncing.",
    "BP_Device_Bouncer_C.ForwardVelocity.DisplayName": "Forward Velocity",
    "BP_Device_Bouncer_TireParent_C.ForwardVelocity.DisplayName": "Forward Velocity",
    "BP_Device_ClassicBouncer_C.ForwardVelocity.DisplayName": "Forward Velocity",
    "BP_Device_HopFlower_C.ForwardVelocity.DisplayName": "Forward Velocity",
    "BP_Device_MushroomBouncer_C.ForwardVelocity.DisplayName": "Forward Velocity",
    "BP_Device_Bouncer_C.HealAmount.DisplayName": "Heal Amount",
    "BP_Device_Bouncer_TireParent_C.HealAmount.DisplayName": "Heal Amount",
    "BP_Device_ClassicBouncer_C.HealAmount.DisplayName": "Heal Amount",
    "BP_Device_HopFlower_C.HealAmount.DisplayName": "Heal Amount",
    "BP_Device_MushroomBouncer_C.HealAmount.DisplayName": "Heal Amount",
    "BP_Device_Bouncer_C.HealCooldown.DisplayName": "Heal Cooldown",
    "BP_Device_Bouncer_TireParent_C.HealCooldown.DisplayName": "Heal Cooldown",
    "BP_Device_ClassicBouncer_C.HealCooldown.DisplayName": "Heal Cooldown",
    "BP_Device_HopFlower_C.HealCooldown.DisplayName": "Heal Cooldown",
    "BP_Device_MushroomBouncer_C.HealCooldown.DisplayName": "Heal Cooldown",
    "BP_Device_Bouncer_C.HealDuration.DisplayName": "Heal Duration",
    "BP_Device_Bouncer_TireParent_C.HealDuration.DisplayName": "Heal Duration",
    "BP_Device_ClassicBouncer_C.HealDuration.DisplayName": "Heal Duration",
    "BP_Device_HopFlower_C.HealDuration.DisplayName": "Heal Duration",
    "BP_Device_MushroomBouncer_C.HealDuration.DisplayName": "Heal Duration",
    "BP_Device_Bouncer_C.HealIntervals.DisplayName": "Heal Intervals",
    "BP_Device_Bouncer_TireParent_C.HealIntervals.DisplayName": "Heal Intervals",
    "BP_Device_ClassicBouncer_C.HealIntervals.DisplayName": "Heal Intervals",
    "BP_Device_HopFlower_C.HealIntervals.DisplayName": "Heal Intervals",
    "BP_Device_MushroomBouncer_C.HealIntervals.DisplayName": "Heal Intervals",
    "BP_Device_Bouncer_C.HealsPlayer.DisplayName": "Heals Player",
    "BP_Device_Bouncer_TireParent_C.HealsPlayer.DisplayName": "Heals Player",
    "BP_Device_ClassicBouncer_C.HealsPlayer.DisplayName": "Heals Player",
    "BP_Device_HopFlower_C.HealsPlayer.DisplayName": "Heals Player",
    "BP_Device_MushroomBouncer_C.HealsPlayer.DisplayName": "Heals Player",
    "BP_Device_Bouncer_C.RefreshHealEffect.Description": "If YES, bouncing will refresh the duration of a player's active heal effect. If NO, there will be no update to their heal over time duration.",
    "BP_Device_Bouncer_TireParent_C.RefreshHealEffect.Description": "If YES, bouncing will refresh the duration of a player's active heal effect. If NO, there will be no update to their heal over time duration.",
    "BP_Device_ClassicBouncer_C.RefreshHealEffect.Description": "If YES, bouncing will refresh the duration of a player's active heal effect. If NO, there will be no update to their heal over time duration.",
    "BP_Device_HopFlower_C.RefreshHealEffect.Description": "If YES, bouncing will refresh the duration of a player's active heal effect. If NO, there will be no update to their heal over time duration.",
    "BP_Device_MushroomBouncer_C.RefreshHealEffect.Description": "If YES, bouncing will refresh the duration of a player's active heal effect. If NO, there will be no update to their heal over time duration.",
    "BP_Device_Bouncer_C.InvertClassSelection.Description": "If set, all Classes except for the selected Class can activate the device.",
    "BP_Device_Bouncer_TireParent_C.InvertClassSelection.Description": "If set, all Classes except for the selected Class can activate the device.",
    "BP_Device_ClassicBouncer_C.InvertClassSelection.Description": "If set, all Classes except for the selected Class can activate the device.",
    "BP_Device_HopFlower_C.InvertClassSelection.Description": "If set, all Classes except for the selected Class can activate the device.",
    "BP_Device_MushroomBouncer_C.InvertClassSelection.Description": "If set, all Classes except for the selected Class can activate the device.",
    "BP_Device_Bouncer_C.InvertTeamSelection.Description": "If set, all Teams except for the selected Team can activate the device.",
    "BP_Device_Bouncer_TireParent_C.InvertTeamSelection.Description": "If set, all Teams except for the selected Team can activate the device.",
    "BP_Device_ClassicBouncer_C.InvertTeamSelection.Description": "If set, all Teams except for the selected Team can activate the device.",
    "BP_Device_HopFlower_C.InvertTeamSelection.Description": "If set, all Teams except for the selected Team can activate the device.",
    "BP_Device_MushroomBouncer_C.InvertTeamSelection.Description": "If set, all Teams except for the selected Team can activate the device.",
    "BP_Device_Bouncer_C.bIncreasedAirControl.DisplayName": "Increased Air Control",
    "BP_Device_Bouncer_TireParent_C.bIncreasedAirControl.DisplayName": "Increased Air Control",
    "BP_Device_ClassicBouncer_C.bIncreasedAirControl.DisplayName": "Increased Air Control",
    "BP_Device_HopFlower_C.bIncreasedAirControl.DisplayName": "Increased Air Control",
    "BP_Device_MushroomBouncer_C.bIncreasedAirControl.DisplayName": "Increased Air Control",
    "EBouncerHealsPlayer.Instant Heal.DisplayName": "Instant Heal",
    "BP_Device_Bouncer_C.InvertClassSelection.DisplayName": "Invert Class Selection",
    "BP_Device_Bouncer_TireParent_C.InvertClassSelection.DisplayName": "Invert Class Selection",
    "BP_Device_ClassicBouncer_C.InvertClassSelection.DisplayName": "Invert Class Selection",
    "BP_Device_HopFlower_C.InvertClassSelection.DisplayName": "Invert Class Selection",
    "BP_Device_MushroomBouncer_C.InvertClassSelection.DisplayName": "Invert Class Selection",
    "BP_Device_Bouncer_C.InvertTeamSelection.DisplayName": "Invert Team Selection",
    "BP_Device_Bouncer_TireParent_C.InvertTeamSelection.DisplayName": "Invert Team Selection",
    "BP_Device_ClassicBouncer_C.InvertTeamSelection.DisplayName": "Invert Team Selection",
    "BP_Device_HopFlower_C.InvertTeamSelection.DisplayName": "Invert Team Selection",
    "BP_Device_MushroomBouncer_C.InvertTeamSelection.DisplayName": "Invert Team Selection",
    "BP_Device_Bouncer_C.IsIndestructible.DisplayName": "Is Indestructible",
    "BP_Device_Bouncer_TireParent_C.IsIndestructible.DisplayName": "Is Indestructible",
    "BP_Device_ClassicBouncer_C.IsIndestructible.DisplayName": "Is Indestructible",
    "BP_Device_HopFlower_C.IsIndestructible.DisplayName": "Is Indestructible",
    "BP_Device_MushroomBouncer_C.IsIndestructible.DisplayName": "Is Indestructible",
    "BP_Device_HopFlower_C.MaintainedMomentum.DisplayName": "Maintained Momentum",
    "BP_Device_HopFlower_C.MaintainedVehicleMomentum.DisplayName": "Maintained Vehicle Momentum",
    "ECreativeClassType.NoClass.DisplayName": "No Class",
    "EBouncerHealsPlayer.No Heal.DisplayName": "No Heal",
    "BoolMetaData.FalseDisplayName": "Off",
    "BoolMetaData.TrueDisplayName": "On",
    "BP_Device_Bouncer_C.On Bounced On.DisplayName": "On Bounced On",
    "BP_Device_Bouncer_TireParent_C.On Bounced On.DisplayName": "On Bounced On",
    "BP_Device_ClassicBouncer_C.On Bounced On.DisplayName": "On Bounced On",
    "BP_Device_HopFlower_C.On Bounced On.DisplayName": "On Bounced On",
    "BP_Device_MushroomBouncer_C.On Bounced On.DisplayName": "On Bounced On",
    "BP_Device_Bouncer_C.OnBouncedTrigger.DisplayName": "On Bounced Trigger",
    "BP_Device_Bouncer_TireParent_C.OnBouncedTrigger.DisplayName": "On Bounced Trigger",
    "BP_Device_ClassicBouncer_C.OnBouncedTrigger.DisplayName": "On Bounced Trigger",
    "BP_Device_HopFlower_C.OnBouncedTrigger.DisplayName": "On Bounced Trigger",
    "BP_Device_MushroomBouncer_C.OnBouncedTrigger.DisplayName": "On Bounced Trigger",
    "BP_Device_Bouncer_C.On Heal Effect Starts.DisplayName": "On Heal Effect Starts",
    "BP_Device_Bouncer_TireParent_C.On Heal Effect Starts.DisplayName": "On Heal Effect Starts",
    "BP_Device_ClassicBouncer_C.On Heal Effect Starts.DisplayName": "On Heal Effect Starts",
    "BP_Device_HopFlower_C.On Heal Effect Starts.DisplayName": "On Heal Effect Starts",
    "BP_Device_MushroomBouncer_C.On Heal Effect Starts.DisplayName": "On Heal Effect Starts",
    "BP_Device_Bouncer_C.On Heal Effect Stops.DisplayName": "On Heal Effect Stops",
    "BP_Device_Bouncer_TireParent_C.On Heal Effect Stops.DisplayName": "On Heal Effect Stops",
    "BP_Device_ClassicBouncer_C.On Heal Effect Stops.DisplayName": "On Heal Effect Stops",
    "BP_Device_HopFlower_C.On Heal Effect Stops.DisplayName": "On Heal Effect Stops",
    "BP_Device_MushroomBouncer_C.On Heal Effect Stops.DisplayName": "On Heal Effect Stops",
    "EBouncerHealsPlayer.Periodic Heal.DisplayName": "Periodic Heal",
    "EBouncedTriggerSource.Players Only.DisplayName": "Players Only",
    "BP_Device_Bouncer_C.RefreshHealEffect.DisplayName": "Refresh Heal Effect",
    "BP_Device_Bouncer_TireParent_C.RefreshHealEffect.DisplayName": "Refresh Heal Effect",
    "BP_Device_ClassicBouncer_C.RefreshHealEffect.DisplayName": "Refresh Heal Effect",
    "BP_Device_HopFlower_C.RefreshHealEffect.DisplayName": "Refresh Heal Effect",
    "BP_Device_MushroomBouncer_C.RefreshHealEffect.DisplayName": "Refresh Heal Effect",
    "TeamIndexMetaData.DisplayPattern": "Team {0}",
    "BP_Device_Bouncer_C.HealAmount.Description": "The amount of health applied each time the effect triggers.",
    "BP_Device_Bouncer_TireParent_C.HealAmount.Description": "The amount of health applied each time the effect triggers.",
    "BP_Device_ClassicBouncer_C.HealAmount.Description": "The amount of health applied each time the effect triggers.",
    "BP_Device_HopFlower_C.HealAmount.Description": "The amount of health applied each time the effect triggers.",
    "BP_Device_MushroomBouncer_C.HealAmount.Description": "The amount of health applied each time the effect triggers.",
    "BP_Device_Bouncer_C.On Heal Effect Starts.Description": "Triggers when a player gets a heal effect from this device.",
    "BP_Device_Bouncer_TireParent_C.On Heal Effect Starts.Description": "Triggers when a player gets a heal effect from this device.",
    "BP_Device_ClassicBouncer_C.On Heal Effect Starts.Description": "Triggers when a player gets a heal effect from this device.",
    "BP_Device_HopFlower_C.On Heal Effect Starts.Description": "Triggers when a player gets a heal effect from this device.",
    "BP_Device_MushroomBouncer_C.On Heal Effect Starts.Description": "Triggers when a player gets a heal effect from this device.",
    "BP_Device_Bouncer_C.On Bounced On.Description": "Triggers when a player is bounced by this device.",
    "BP_Device_Bouncer_TireParent_C.On Bounced On.Description": "Triggers when a player is bounced by this device.",
    "BP_Device_ClassicBouncer_C.On Bounced On.Description": "Triggers when a player is bounced by this device.",
    "BP_Device_HopFlower_C.On Bounced On.Description": "Triggers when a player is bounced by this device.",
    "BP_Device_MushroomBouncer_C.On Bounced On.Description": "Triggers when a player is bounced by this device.",
    "BP_Device_Bouncer_C.On Heal Effect Stops.Description": "Triggers when the heal effect from this device ends for a player.",
    "BP_Device_Bouncer_TireParent_C.On Heal Effect Stops.Description": "Triggers when the heal effect from this device ends for a player.",
    "BP_Device_ClassicBouncer_C.On Heal Effect Stops.Description": "Triggers when the heal effect from this device ends for a player.",
    "BP_Device_HopFlower_C.On Heal Effect Stops.Description": "Triggers when the heal effect from this device ends for a player.",
    "BP_Device_MushroomBouncer_C.On Heal Effect Stops.Description": "Triggers when the heal effect from this device ends for a player.",
    "BP_Device_HopFlower_C.MaintainedVehicleMomentum.Description": "Vehicles can override Maintained Momentum with their own value. This can help prevent vehicles from getting stuck when Maintained Momentum is low.",
    "EBounceDirection.Vertical.DisplayName": "Vertical",
    "BP_Device_Bouncer_C.VisibleDuringGame.DisplayName": "Visible During Game",
    "BP_Device_Bouncer_TireParent_C.VisibleDuringGame.DisplayName": "Visible During Game",
    "BP_Device_ClassicBouncer_C.VisibleDuringGame.DisplayName": "Visible During Game",
    "BP_Device_HopFlower_C.VisibleDuringGame.DisplayName": "Visible During Game",
    "BP_Device_MushroomBouncer_C.VisibleDuringGame.DisplayName": "Visible During Game"
  }
}